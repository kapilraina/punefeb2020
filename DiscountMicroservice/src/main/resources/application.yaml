spring:
  mvc:
    view:
      prefix: /
      suffix: .html
  sleuth:
    trace-id128: true
    sampler:
      probability: 1.0
  zipkin:
    enabled: true
    base-url: http://zipkin:9411/
  rabbitmq:
    host: ${discountms.bus.rabbitmq.host:rabbitmq-master}
    port: ${discountms.bus.rabbitmq.port:5672}
  main:
    allow-bean-definition-overriding: true

server:
  port: ${discountms.server.port:0}
 
eureka:
  instance:
    instanceId: ${spring.application.name}:${random.int}
    leaseRenewalIntervalInSeconds: ${discountms.eureka.instance.leaseRenewalIntervalInSeconds}
    leaseExpirationDurationInSeconds: ${discountms.eureka.instance.leaseExpirationDurationInSeconds}
    preferIpAddress: true
    metadata-map:
      zone: ${discountms.eureka.instance.zone}
  client:
    registerWithEureka: ${discountms.eureka.client.registerWithEureka}
    fetchRegistry: ${discountms.eureka.client.fetchRegistry}
    prefer-same-zone-eureka: ${discountms.eureka.client.prefer-same-zone-eureka}
    serviceUrl:
      defaultZone: ${discountms.eureka.client.service-registry-url} 
      
hystrix:
  metrics:
    polling-interval-ms: ${discountms.hystrix.metrics.polling-interval-ms} 
    enabled: true
    rollingStats:
      timeInMilliseconds: 5 #in a rolling window defined by(default: 10 seconds)

management:
  endpoints:
    web:
      exposure:
        include: "*"
  metrics:
    export:
      prometheus:
        enabled: true
    enable:
      all: true
  endpoint:
    prometheus:
      enabled: true
    metrics:
      enabled: true
  server:
    port: ${discountms.management.server.port:9999}


#logging:
#  pattern: 
#    level: ${logging.pattern.level}
#  level:
#    root: ${discountms.logging.root.level}
#    com.spring.microservices: ${discountms.logging.app.level}