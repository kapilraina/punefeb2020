spring:
  mvc:
    view:
      prefix: /
      suffix: .html
  sleuth:
    enabled: true
    trace-id128: ${webauditms.sleuth.trace128:true}
    sampler:
      probability: 1.0
      percentage: 1.0
#      rate: 1.0
  zipkin:
    enabled: true
    base-url: ${webauditms.zipkin.url}

  datasource:
    url: ${webauditms.datasource.url}
    username: ${webauditms.datasource.username}
    password: ${webauditms.datasource.password}
    driver-class-name: ${webauditms.datasource.driver}
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        show_sql: false
        ddl-auto: create-drop
    

#  rabbitmq:
#    host: ${webauditms.bus.rabbitmq.host:rabbitmq-master}
#    port: ${webauditms.bus.rabbitmq.port:5672}

  cloud:    stream:      bindings:       webaudit-in:
        binder: rabbit-binder
        destination: ${webauditms.binding.auditout.destination:ex.webaudit}  #Exchange
        group: ${webauditms.binding.auditout.group:q.audit} # queue               
 
      rabbit: 
        bindings:
          webaudit-in:
           consumer:
            bindQueue: ${webauditms.binding.auditout.bindqueue:false}
            declareExchange: false
            exchangeType: direct
            queueNameGroupOnly: true
            routingKeyExpression: ${webauditms.binding.auditout.routingKeyExpression:'rkwebauditshim1'}  
      binders:      
        rabbit-binder:
         type: rabbit
         environment:
            spring:
              rabbitmq:
               host: ${discountms.binder.rabbitmq.host:rabbitmq-master} 
               port: ${discountms.binder.rabbitmq.port:5672}

    bus:
     trace: 
      enabled: ${webauditms.bus.trace:true}
     destination: ${webauditms.bus.destination:busXchange}
     
eureka:
  instance:
    instanceId: ${spring.application.name}:${random.int}
    leaseRenewalIntervalInSeconds: ${webauditms.eureka.instance.leaseRenewalIntervalInSeconds}
    leaseExpirationDurationInSeconds: ${webauditms.eureka.instance.leaseExpirationDurationInSeconds}
    preferIpAddress: true
    metadata-map:
      zone: ${webauditms.eureka.instance.zone}
  client:
    registerWithEureka: ${webauditms.eureka.client.registerWithEureka}
    fetchRegistry: ${webauditms.eureka.client.fetchRegistry}
    prefer-same-zone-eureka: ${webauditms.eureka.client.prefer-same-zone-eureka}
    serviceUrl:
      defaultZone: ${webauditms.eureka.client.service-registry-url} 
      
server:
  port: ${webauditms.server.port:8077} # Remove on non dev/local testing       
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    prometheus:
      enabled: true
             
  server:
    port: ${webauditms.management.server.port:9077}